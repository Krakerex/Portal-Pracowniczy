// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using krzysztofb.Models;

#nullable disable

namespace Portal_Pracownika_API.Migrations
{
    [DbContext(typeof(WnioskiContext))]
    partial class WnioskiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("krzysztofb.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC07F72E6973");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("krzysztofb.Models.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("IdPrzelozonego")
                        .HasColumnType("int")
                        .HasColumnName("Id_Przelozonego");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PasswordHash")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Uzytkown__3214EC07BE300B63");

                    b.HasIndex("IdPrzelozonego");

                    b.HasIndex("Role");

                    b.HasIndex(new[] { "Email" }, "UQ__Uzytkown__A9D10534D16A30AB")
                        .IsUnique();

                    b.ToTable("Uzytkownik");
                });

            modelBuilder.Entity("krzysztofb.Models.Wniosek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataRozpoczecia")
                        .HasColumnType("date")
                        .HasColumnName("Data_rozpoczecia");

                    b.Property<DateTime?>("DataWypelnienia")
                        .HasColumnType("date")
                        .HasColumnName("Data_wypelnienia");

                    b.Property<DateTime?>("DataZakonczenia")
                        .HasColumnType("date")
                        .HasColumnName("Data_zakonczenia");

                    b.Property<int?>("IdOsobyAkceptujacej")
                        .HasColumnType("int")
                        .HasColumnName("Id_Osoby_Akceptujacej");

                    b.Property<int?>("IdOsobyZglaszajacej")
                        .HasColumnType("int")
                        .HasColumnName("Id_Osoby_Zglaszajacej");

                    b.Property<int?>("IloscDni")
                        .HasColumnType("int")
                        .HasColumnName("Ilosc_dni");

                    b.Property<string>("Nazwa")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("NumerEwidencyjny")
                        .HasColumnType("int")
                        .HasColumnName("Numer_ewidencyjny");

                    b.Property<byte[]>("Plik")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id")
                        .HasName("PK__Wniosek__3214EC07E28DE3C1");

                    b.HasIndex("IdOsobyAkceptujacej");

                    b.HasIndex("IdOsobyZglaszajacej");

                    b.ToTable("Wniosek");
                });

            modelBuilder.Entity("krzysztofb.Models.Uzytkownik", b =>
                {
                    b.HasOne("krzysztofb.Models.Uzytkownik", "IdPrzelozonegoNavigation")
                        .WithMany("InverseIdPrzelozonegoNavigation")
                        .HasForeignKey("IdPrzelozonego")
                        .HasConstraintName("FK__Uzytkowni__Id_Pr__286302EC");

                    b.HasOne("krzysztofb.Models.Role", "RoleNavigation")
                        .WithMany("Uzytkownik")
                        .HasForeignKey("Role")
                        .HasConstraintName("FK__Uzytkownik__Role__276EDEB3");

                    b.Navigation("IdPrzelozonegoNavigation");

                    b.Navigation("RoleNavigation");
                });

            modelBuilder.Entity("krzysztofb.Models.Wniosek", b =>
                {
                    b.HasOne("krzysztofb.Models.Uzytkownik", "IdOsobyAkceptujacejNavigation")
                        .WithMany("WniosekIdOsobyAkceptujacejNavigation")
                        .HasForeignKey("IdOsobyAkceptujacej")
                        .HasConstraintName("FK__Wniosek__Id_Osob__2C3393D0");

                    b.HasOne("krzysztofb.Models.Uzytkownik", "IdOsobyZglaszajacejNavigation")
                        .WithMany("WniosekIdOsobyZglaszajacejNavigation")
                        .HasForeignKey("IdOsobyZglaszajacej")
                        .HasConstraintName("FK__Wniosek__Id_Osob__2B3F6F97");

                    b.Navigation("IdOsobyAkceptujacejNavigation");

                    b.Navigation("IdOsobyZglaszajacejNavigation");
                });

            modelBuilder.Entity("krzysztofb.Models.Role", b =>
                {
                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("krzysztofb.Models.Uzytkownik", b =>
                {
                    b.Navigation("InverseIdPrzelozonegoNavigation");

                    b.Navigation("WniosekIdOsobyAkceptujacejNavigation");

                    b.Navigation("WniosekIdOsobyZglaszajacejNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
